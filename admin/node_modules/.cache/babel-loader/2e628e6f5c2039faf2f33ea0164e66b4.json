{"ast":null,"code":"import React from'react';import{withStyles}from'@material-ui/core/styles';import GridList from'@material-ui/core/GridList';import GridListTile from'@material-ui/core/GridListTile';import GridListTileBar from'@material-ui/core/GridListTileBar';import IconButton from'@material-ui/core/IconButton';import StarBorderIcon from'@material-ui/icons/StarBorder';import tileData from'./tileData';var styles=function styles(theme){return{root:{display:'flex',flexWrap:'wrap',justifyContent:'space-around',overflow:'hidden',backgroundColor:theme.palette.background.paper},gridList:{width:500,height:450,// Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\ntransform:'translateZ(0)'},titleBar:{background:'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, '+'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'},icon:{color:'white'}};};/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *     featured: true,\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */function AdvancedGridList(props){var classes=props.classes;return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(GridList,{cellHeight:200,spacing:1,className:classes.gridList},tileData.map(function(tile){return/*#__PURE__*/React.createElement(GridListTile,{key:tile.img,cols:tile.featured?2:1,rows:tile.featured?2:1},/*#__PURE__*/React.createElement(\"img\",{src:tile.img,alt:tile.title}),/*#__PURE__*/React.createElement(GridListTileBar,{title:tile.title,titlePosition:\"top\",actionIcon:/*#__PURE__*/React.createElement(IconButton,{className:classes.icon},/*#__PURE__*/React.createElement(StarBorderIcon,null)),actionPosition:\"left\",className:classes.titleBar}));})));}export default withStyles(styles)(AdvancedGridList);","map":{"version":3,"sources":["V:/Web/WebFashion/admin/src/utils/demos/grid-list/AdvancedGridList.js"],"names":["React","withStyles","GridList","GridListTile","GridListTileBar","IconButton","StarBorderIcon","tileData","styles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","transform","titleBar","icon","color","AdvancedGridList","props","classes","map","tile","img","featured","title"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mCAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,IAAI,CAAE,CACJC,OAAO,CAAE,MADL,CAEJC,QAAQ,CAAE,MAFN,CAGJC,cAAc,CAAE,cAHZ,CAIJC,QAAQ,CAAE,QAJN,CAKJC,eAAe,CAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC,KALtC,CADiB,CAQvBC,QAAQ,CAAE,CACRC,KAAK,CAAE,GADC,CAERC,MAAM,CAAE,GAFA,CAGR;AACAC,SAAS,CAAE,eAJH,CARa,CAcvBC,QAAQ,CAAE,CACRN,UAAU,CACR,kDACA,0CAHM,CAda,CAmBvBO,IAAI,CAAE,CACJC,KAAK,CAAE,OADH,CAnBiB,CAAL,EAApB,CAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASC,CAAAA,gBAAT,CAA0BC,KAA1B,CAAiC,IACvBC,CAAAA,OADuB,CACXD,KADW,CACvBC,OADuB,CAG/B,mBACE,2BAAK,SAAS,CAAEA,OAAO,CAAClB,IAAxB,eACE,oBAAC,QAAD,EAAU,UAAU,CAAE,GAAtB,CAA2B,OAAO,CAAE,CAApC,CAAuC,SAAS,CAAEkB,OAAO,CAACT,QAA1D,EACGZ,QAAQ,CAACsB,GAAT,CAAa,SAAAC,IAAI,qBAChB,oBAAC,YAAD,EAAc,GAAG,CAAEA,IAAI,CAACC,GAAxB,CAA6B,IAAI,CAAED,IAAI,CAACE,QAAL,CAAgB,CAAhB,CAAoB,CAAvD,CAA0D,IAAI,CAAEF,IAAI,CAACE,QAAL,CAAgB,CAAhB,CAAoB,CAApF,eACE,2BAAK,GAAG,CAAEF,IAAI,CAACC,GAAf,CAAoB,GAAG,CAAED,IAAI,CAACG,KAA9B,EADF,cAEE,oBAAC,eAAD,EACE,KAAK,CAAEH,IAAI,CAACG,KADd,CAEE,aAAa,CAAC,KAFhB,CAGE,UAAU,cACR,oBAAC,UAAD,EAAY,SAAS,CAAEL,OAAO,CAACJ,IAA/B,eACE,oBAAC,cAAD,MADF,CAJJ,CAQE,cAAc,CAAC,MARjB,CASE,SAAS,CAAEI,OAAO,CAACL,QATrB,EAFF,CADgB,EAAjB,CADH,CADF,CADF,CAsBD,CAMD,cAAetB,CAAAA,UAAU,CAACO,MAAD,CAAV,CAAmBkB,gBAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport tileData from './tileData';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n      'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n  icon: {\n    color: 'white',\n  },\n});\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *     featured: true,\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nfunction AdvancedGridList(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={200} spacing={1} className={classes.gridList}>\n        {tileData.map(tile => (\n          <GridListTile key={tile.img} cols={tile.featured ? 2 : 1} rows={tile.featured ? 2 : 1}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              titlePosition=\"top\"\n              actionIcon={\n                <IconButton className={classes.icon}>\n                  <StarBorderIcon />\n                </IconButton>\n              }\n              actionPosition=\"left\"\n              className={classes.titleBar}\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n\nAdvancedGridList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AdvancedGridList);\n"]},"metadata":{},"sourceType":"module"}
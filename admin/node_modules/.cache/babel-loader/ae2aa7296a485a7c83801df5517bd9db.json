{"ast":null,"code":"import React from'react';import{withStyles}from'@material-ui/core/styles';import GridList from'@material-ui/core/GridList';import GridListTile from'@material-ui/core/GridListTile';import GridListTileBar from'@material-ui/core/GridListTileBar';import IconButton from'@material-ui/core/IconButton';import StarBorderIcon from'@material-ui/icons/StarBorder';import tileData from'./tileData';var styles=function styles(theme){return{root:{display:'flex',flexWrap:'wrap',justifyContent:'space-around',overflow:'hidden',backgroundColor:theme.palette.background.paper},gridList:{flexWrap:'nowrap',// Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\ntransform:'translateZ(0)'},title:{color:theme.palette.primary.light},titleBar:{background:'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'}};};/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */function SingleLineGridList(props){var classes=props.classes;return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(GridList,{className:classes.gridList,cols:2.5},tileData.map(function(tile){return/*#__PURE__*/React.createElement(GridListTile,{key:tile.img},/*#__PURE__*/React.createElement(\"img\",{src:tile.img,alt:tile.title}),/*#__PURE__*/React.createElement(GridListTileBar,{title:tile.title,classes:{root:classes.titleBar,title:classes.title},actionIcon:/*#__PURE__*/React.createElement(IconButton,null,/*#__PURE__*/React.createElement(StarBorderIcon,{className:classes.title}))}));})));}export default withStyles(styles)(SingleLineGridList);","map":{"version":3,"sources":["V:/Web/WebFashion/admin/src/utils/demos/grid-list/SingleLineGridList.js"],"names":["React","withStyles","GridList","GridListTile","GridListTileBar","IconButton","StarBorderIcon","tileData","styles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","title","color","primary","light","titleBar","SingleLineGridList","props","classes","map","tile","img"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mCAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,IAAI,CAAE,CACJC,OAAO,CAAE,MADL,CAEJC,QAAQ,CAAE,MAFN,CAGJC,cAAc,CAAE,cAHZ,CAIJC,QAAQ,CAAE,QAJN,CAKJC,eAAe,CAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC,KALtC,CADiB,CAQvBC,QAAQ,CAAE,CACRP,QAAQ,CAAE,QADF,CAER;AACAQ,SAAS,CAAE,eAHH,CARa,CAavBC,KAAK,CAAE,CACLC,KAAK,CAAEb,KAAK,CAACO,OAAN,CAAcO,OAAd,CAAsBC,KADxB,CAbgB,CAgBvBC,QAAQ,CAAE,CACRR,UAAU,CACR,sFAFM,CAhBa,CAAL,EAApB,CAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASS,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmC,IACzBC,CAAAA,OADyB,CACbD,KADa,CACzBC,OADyB,CAGjC,mBACE,2BAAK,SAAS,CAAEA,OAAO,CAAClB,IAAxB,eACE,oBAAC,QAAD,EAAU,SAAS,CAAEkB,OAAO,CAACT,QAA7B,CAAuC,IAAI,CAAE,GAA7C,EACGZ,QAAQ,CAACsB,GAAT,CAAa,SAAAC,IAAI,qBAChB,oBAAC,YAAD,EAAc,GAAG,CAAEA,IAAI,CAACC,GAAxB,eACE,2BAAK,GAAG,CAAED,IAAI,CAACC,GAAf,CAAoB,GAAG,CAAED,IAAI,CAACT,KAA9B,EADF,cAEE,oBAAC,eAAD,EACE,KAAK,CAAES,IAAI,CAACT,KADd,CAEE,OAAO,CAAE,CACPX,IAAI,CAAEkB,OAAO,CAACH,QADP,CAEPJ,KAAK,CAAEO,OAAO,CAACP,KAFR,CAFX,CAME,UAAU,cACR,oBAAC,UAAD,mBACE,oBAAC,cAAD,EAAgB,SAAS,CAAEO,OAAO,CAACP,KAAnC,EADF,CAPJ,EAFF,CADgB,EAAjB,CADH,CADF,CADF,CAuBD,CAMD,cAAepB,CAAAA,UAAU,CAACO,MAAD,CAAV,CAAmBkB,kBAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport tileData from './tileData';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n  },\n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n});\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nfunction SingleLineGridList(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <GridList className={classes.gridList} cols={2.5}>\n        {tileData.map(tile => (\n          <GridListTile key={tile.img}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              classes={{\n                root: classes.titleBar,\n                title: classes.title,\n              }}\n              actionIcon={\n                <IconButton>\n                  <StarBorderIcon className={classes.title} />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n\nSingleLineGridList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SingleLineGridList);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import Card from'@material-ui/core/Card';import CardContent from'@material-ui/core/CardContent';import Grid from'@material-ui/core/Grid';import IconButton from'@material-ui/core/IconButton';import React from'react';import Typography from'@material-ui/core/Typography';import{makeStyles}from'@material-ui/core/styles';var useStyles=makeStyles(function(theme){return{content:{position:'relative',padding:theme.spacing(1)*2,'&:last-child':{paddingBottom:theme.spacing(1)*2}},icon:{boxShadow:'none',color:'white'},iconFloat:{position:'absolute',right:'15px',top:'50%',marginTop:'-20px',opacity:'0.2',transform:'rotate(-5deg)'},lightText:{color:'white'}};});var StatCard=function StatCard(_ref){var type=_ref.type,title=_ref.title,value=_ref.value,icon=_ref.icon,color=_ref.color;var classes=useStyles();var before=null;var after=null;var cardIcon=React.createElement(Grid,{item:true,className:type==='fill'?classes.iconFloat:null},React.createElement(IconButton,{className:classes.icon,\"aria-label\":title,style:{backgroundColor:color}},icon));if(icon){type==='fill'?after=cardIcon:before=cardIcon;}return React.createElement(Card,{style:type==='fill'?{backgroundColor:color}:null},React.createElement(CardContent,{className:classes.content},React.createElement(Grid,{container:true,alignItems:'center',direction:'row',justify:'flex-start'},before,React.createElement(Grid,{item:true},React.createElement(\"div\",{className:type==='fill'?'pr-1':'px-1'},React.createElement(Typography,{variant:\"h6\",className:type==='fill'?classes.lightText:null},value),React.createElement(Typography,{variant:\"caption\",className:type==='fill'?classes.lightText:null},title))),after)));};export default StatCard;","map":{"version":3,"sources":["V:/Web/WebFashion/admin/src/components/Cards/StatCard.js"],"names":["Card","CardContent","Grid","IconButton","React","Typography","makeStyles","useStyles","theme","content","position","padding","spacing","paddingBottom","icon","boxShadow","color","iconFloat","right","top","marginTop","opacity","transform","lightText","StatCard","type","title","value","classes","before","after","cardIcon","backgroundColor"],"mappings":"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","sourcesContent":["import Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    position: 'relative',\n    padding: theme.spacing(1) * 2,\n    '&:last-child': {\n      paddingBottom: theme.spacing(1) * 2\n    }\n  },\n  icon: {\n    boxShadow: 'none',\n    color: 'white'\n  },\n  iconFloat: {\n    position: 'absolute',\n    right: '15px',\n    top: '50%',\n    marginTop: '-20px',\n    opacity: '0.2',\n    transform: 'rotate(-5deg)'\n  },\n  lightText: {\n    color: 'white'\n  }\n}));\n\nconst StatCard = ({ type, title, value, icon, color }) => {\n  const classes = useStyles();\n  let before = null;\n  let after = null;\n\n  const cardIcon = (\n    <Grid item className={type === 'fill' ? classes.iconFloat : null}>\n      <IconButton\n        className={classes.icon}\n        aria-label={title}\n        style={{ backgroundColor: color }}\n      >\n        {icon}\n      </IconButton>\n    </Grid>\n  );\n\n  if (icon) {\n    type === 'fill' ? (after = cardIcon) : (before = cardIcon);\n  }\n\n  return (\n    <Card style={type === 'fill' ? { backgroundColor: color } : null}>\n      <CardContent className={classes.content}>\n        <Grid\n          container\n          alignItems={'center'}\n          direction={'row'}\n          justify={'flex-start'}\n        >\n          {before}\n          <Grid item>\n            <div className={type === 'fill' ? 'pr-1' : 'px-1'}>\n              <Typography\n                variant=\"h6\"\n                className={type === 'fill' ? classes.lightText : null}\n              >\n                {value}\n              </Typography>\n              <Typography\n                variant=\"caption\"\n                className={type === 'fill' ? classes.lightText : null}\n              >\n                {title}\n              </Typography>\n            </div>\n          </Grid>\n          {after}\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nStatCard.propTypes = {\n  type: PropTypes.oneOf(['fill']),\n  title: PropTypes.string,\n  value: PropTypes.number,\n  icon: PropTypes.element,\n  color: PropTypes.string\n};\n\nexport default StatCard;\n"]},"metadata":{},"sourceType":"module"}
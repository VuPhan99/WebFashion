{"ast":null,"code":"import _toConsumableArray from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{withStyles}from'@material-ui/core/styles';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListItemSecondaryAction from'@material-ui/core/ListItemSecondaryAction';import ListItemText from'@material-ui/core/ListItemText';import Checkbox from'@material-ui/core/Checkbox';import IconButton from'@material-ui/core/IconButton';import CommentIcon from'@material-ui/icons/Comment';var styles=function styles(theme){return{root:{width:'100%',maxWidth:360,backgroundColor:theme.palette.background.paper}};};var CheckboxList=/*#__PURE__*/function(_React$Component){_inherits(CheckboxList,_React$Component);function CheckboxList(){var _getPrototypeOf2;var _this;_classCallCheck(this,CheckboxList);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(CheckboxList)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={checked:[0]};_this.handleToggle=function(value){return function(){var checked=_this.state.checked;var currentIndex=checked.indexOf(value);var newChecked=_toConsumableArray(checked);if(currentIndex===-1){newChecked.push(value);}else{newChecked.splice(currentIndex,1);}_this.setState({checked:newChecked});};};return _this;}_createClass(CheckboxList,[{key:\"render\",value:function render(){var _this2=this;var classes=this.props.classes;return React.createElement(\"div\",{className:classes.root},React.createElement(List,null,[0,1,2,3].map(function(value){return React.createElement(ListItem,{key:value,role:undefined,dense:true,button:true,onClick:_this2.handleToggle(value),className:classes.listItem},React.createElement(Checkbox,{checked:_this2.state.checked.indexOf(value)!==-1,tabIndex:-1,disableRipple:true}),React.createElement(ListItemText,{primary:\"Line item \".concat(value+1)}),React.createElement(ListItemSecondaryAction,null,React.createElement(IconButton,{\"aria-label\":\"Comments\"},React.createElement(CommentIcon,null))));})));}}]);return CheckboxList;}(React.Component);export default withStyles(styles)(CheckboxList);","map":{"version":3,"sources":["V:/Web/WebFashion/admin/src/utils/demos/lists/CheckboxList.js"],"names":["React","withStyles","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","CommentIcon","styles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","CheckboxList","state","checked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","setState","classes","props","map","undefined","listItem","Component"],"mappings":"srBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,uBAAP,KAAoC,2CAApC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBC,IAAI,CAAE,CACJC,KAAK,CAAE,MADH,CAEJC,QAAQ,CAAE,GAFN,CAGJC,eAAe,CAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC,KAHtC,CADiB,CAAL,EAApB,C,GAQMC,CAAAA,Y,maACJC,K,CAAQ,CACNC,OAAO,CAAE,CAAC,CAAD,CADH,C,OAIRC,Y,CAAe,SAAAC,KAAK,QAAI,WAAM,IACpBF,CAAAA,OADoB,CACR,MAAKD,KADG,CACpBC,OADoB,CAE5B,GAAMG,CAAAA,YAAY,CAAGH,OAAO,CAACI,OAAR,CAAgBF,KAAhB,CAArB,CACA,GAAMG,CAAAA,UAAU,oBAAOL,OAAP,CAAhB,CAEA,GAAIG,YAAY,GAAK,CAAC,CAAtB,CAAyB,CACvBE,UAAU,CAACC,IAAX,CAAgBJ,KAAhB,EACD,CAFD,IAEO,CACLG,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,CAAgC,CAAhC,EACD,CAED,MAAKK,QAAL,CAAc,CACZR,OAAO,CAAEK,UADG,CAAd,EAGD,CAdmB,E,+EAgBX,oBACCI,CAAAA,OADD,CACa,KAAKC,KADlB,CACCD,OADD,CAGP,MACE,4BAAK,SAAS,CAAEA,OAAO,CAAClB,IAAxB,EACE,oBAAC,IAAD,MACG,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,EAAaoB,GAAb,CAAiB,SAAAT,KAAK,QACrB,qBAAC,QAAD,EACE,GAAG,CAAEA,KADP,CAEE,IAAI,CAAEU,SAFR,CAGE,KAAK,KAHP,CAIE,MAAM,KAJR,CAKE,OAAO,CAAE,MAAI,CAACX,YAAL,CAAkBC,KAAlB,CALX,CAME,SAAS,CAAEO,OAAO,CAACI,QANrB,EAQE,oBAAC,QAAD,EACE,OAAO,CAAE,MAAI,CAACd,KAAL,CAAWC,OAAX,CAAmBI,OAAnB,CAA2BF,KAA3B,IAAsC,CAAC,CADlD,CAEE,QAAQ,CAAE,CAAC,CAFb,CAGE,aAAa,KAHf,EARF,CAaE,oBAAC,YAAD,EAAc,OAAO,qBAAeA,KAAK,CAAG,CAAvB,CAArB,EAbF,CAcE,oBAAC,uBAAD,MACE,oBAAC,UAAD,EAAY,aAAW,UAAvB,EACE,oBAAC,WAAD,MADF,CADF,CAdF,CADqB,EAAtB,CADH,CADF,CADF,CA4BD,C,0BApDwBtB,KAAK,CAACkC,S,EA2DjC,cAAejC,CAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBS,YAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n});\n\nclass CheckboxList extends React.Component {\n  state = {\n    checked: [0],\n  };\n\n  handleToggle = value => () => {\n    const { checked } = this.state;\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <List>\n          {[0, 1, 2, 3].map(value => (\n            <ListItem\n              key={value}\n              role={undefined}\n              dense\n              button\n              onClick={this.handleToggle(value)}\n              className={classes.listItem}\n            >\n              <Checkbox\n                checked={this.state.checked.indexOf(value) !== -1}\n                tabIndex={-1}\n                disableRipple\n              />\n              <ListItemText primary={`Line item ${value + 1}`} />\n              <ListItemSecondaryAction>\n                <IconButton aria-label=\"Comments\">\n                  <CommentIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n  }\n}\n\nCheckboxList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CheckboxList);\n"]},"metadata":{},"sourceType":"module"}
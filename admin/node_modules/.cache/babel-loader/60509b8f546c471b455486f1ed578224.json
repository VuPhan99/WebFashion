{"ast":null,"code":"import _defineProperty from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{withStyles}from'@material-ui/core/styles';import green from'@material-ui/core/colors/green';import FormGroup from'@material-ui/core/FormGroup';import FormControlLabel from'@material-ui/core/FormControlLabel';import Checkbox from'@material-ui/core/Checkbox';import CheckBoxOutlineBlankIcon from'@material-ui/icons/CheckBoxOutlineBlank';import CheckBoxIcon from'@material-ui/icons/CheckBox';import Favorite from'@material-ui/icons/Favorite';import FavoriteBorder from'@material-ui/icons/FavoriteBorder';var styles={root:{color:green[600],'&$checked':{color:green[500]}},checked:{},size:{width:40,height:40},sizeIcon:{fontSize:20}};var CheckboxLabels=/*#__PURE__*/function(_React$Component){_inherits(CheckboxLabels,_React$Component);var _super=_createSuper(CheckboxLabels);function CheckboxLabels(){var _this;_classCallCheck(this,CheckboxLabels);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={checkedA:true,checkedB:true,checkedF:true,checkedG:true};_this.handleChange=function(name){return function(event){_this.setState(_defineProperty({},name,event.target.checked));};};return _this;}_createClass(CheckboxLabels,[{key:\"render\",value:function render(){var classes=this.props.classes;return/*#__PURE__*/React.createElement(FormGroup,{row:true},/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Checkbox,{checked:this.state.checkedA,onChange:this.handleChange('checkedA'),value:\"checkedA\"}),label:\"Secondary\"}),/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Checkbox,{checked:this.state.checkedB,onChange:this.handleChange('checkedB'),value:\"checkedB\",color:\"primary\"}),label:\"Primary\"}),/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Checkbox,{value:\"checkedC\"}),label:\"Uncontrolled\"}),/*#__PURE__*/React.createElement(FormControlLabel,{disabled:true,control:/*#__PURE__*/React.createElement(Checkbox,{value:\"checkedD\"}),label:\"Disabled\"}),/*#__PURE__*/React.createElement(FormControlLabel,{disabled:true,control:/*#__PURE__*/React.createElement(Checkbox,{checked:true,value:\"checkedE\"}),label:\"Disabled\"}),/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Checkbox,{checked:this.state.checkedF,onChange:this.handleChange('checkedF'),value:\"checkedF\",indeterminate:true}),label:\"Indeterminate\"}),/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Checkbox,{checked:this.state.checkedG,onChange:this.handleChange('checkedG'),value:\"checkedG\",classes:{root:classes.root,checked:classes.checked}}),label:\"Custom color\"}),/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Checkbox,{icon:/*#__PURE__*/React.createElement(FavoriteBorder,null),checkedIcon:/*#__PURE__*/React.createElement(Favorite,null),value:\"checkedH\"}),label:\"Custom icon\"}),/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Checkbox,{className:classes.size,icon:/*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon,{className:classes.sizeIcon}),checkedIcon:/*#__PURE__*/React.createElement(CheckBoxIcon,{className:classes.sizeIcon}),value:\"checkedI\"}),label:\"Custom size\"}));}}]);return CheckboxLabels;}(React.Component);export default withStyles(styles)(CheckboxLabels);","map":{"version":3,"sources":["V:/Web/WebFashion/admin/src/utils/demos/selection-controls/CheckboxLabels.js"],"names":["React","withStyles","green","FormGroup","FormControlLabel","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","Favorite","FavoriteBorder","styles","root","color","checked","size","width","height","sizeIcon","fontSize","CheckboxLabels","state","checkedA","checkedB","checkedF","checkedG","handleChange","name","event","setState","target","classes","props","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nconst styles = {\n  root: {\n    color: green[600],\n    '&$checked': {\n      color: green[500],\n    },\n  },\n  checked: {},\n  size: {\n    width: 40,\n    height: 40,\n  },\n  sizeIcon: {\n    fontSize: 20,\n  },\n};\n\nclass CheckboxLabels extends React.Component {\n  state = {\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true,\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <FormGroup row>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedA}\n              onChange={this.handleChange('checkedA')}\n              value=\"checkedA\"\n            />\n          }\n          label=\"Secondary\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedB}\n              onChange={this.handleChange('checkedB')}\n              value=\"checkedB\"\n              color=\"primary\"\n            />\n          }\n          label=\"Primary\"\n        />\n        <FormControlLabel control={<Checkbox value=\"checkedC\" />} label=\"Uncontrolled\" />\n        <FormControlLabel disabled control={<Checkbox value=\"checkedD\" />} label=\"Disabled\" />\n        <FormControlLabel\n          disabled\n          control={<Checkbox checked value=\"checkedE\" />}\n          label=\"Disabled\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedF}\n              onChange={this.handleChange('checkedF')}\n              value=\"checkedF\"\n              indeterminate\n            />\n          }\n          label=\"Indeterminate\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.checkedG}\n              onChange={this.handleChange('checkedG')}\n              value=\"checkedG\"\n              classes={{\n                root: classes.root,\n                checked: classes.checked,\n              }}\n            />\n          }\n          label=\"Custom color\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox icon={<FavoriteBorder />} checkedIcon={<Favorite />} value=\"checkedH\" />\n          }\n          label=\"Custom icon\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              className={classes.size}\n              icon={<CheckBoxOutlineBlankIcon className={classes.sizeIcon} />}\n              checkedIcon={<CheckBoxIcon className={classes.sizeIcon} />}\n              value=\"checkedI\"\n            />\n          }\n          label=\"Custom size\"\n        />\n      </FormGroup>\n    );\n  }\n}\n\nCheckboxLabels.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CheckboxLabels);\n"]},"metadata":{},"sourceType":"module"}
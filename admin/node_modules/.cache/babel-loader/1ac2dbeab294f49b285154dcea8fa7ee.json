{"ast":null,"code":"import _defineProperty from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{withStyles}from'@material-ui/core/styles';import FormLabel from'@material-ui/core/FormLabel';import FormControl from'@material-ui/core/FormControl';import FormGroup from'@material-ui/core/FormGroup';import FormControlLabel from'@material-ui/core/FormControlLabel';import FormHelperText from'@material-ui/core/FormHelperText';import Checkbox from'@material-ui/core/Checkbox';var styles=function styles(theme){return{root:{display:'flex'},formControl:{margin:theme.spacing(1)*3}};};var CheckboxesGroup=/*#__PURE__*/function(_React$Component){_inherits(CheckboxesGroup,_React$Component);function CheckboxesGroup(){var _getPrototypeOf2;var _this;_classCallCheck(this,CheckboxesGroup);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(CheckboxesGroup)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={gilad:true,jason:false,antoine:false};_this.handleChange=function(name){return function(event){_this.setState(_defineProperty({},name,event.target.checked));};};return _this;}_createClass(CheckboxesGroup,[{key:\"render\",value:function render(){var classes=this.props.classes;var _this$state=this.state,gilad=_this$state.gilad,jason=_this$state.jason,antoine=_this$state.antoine;var error=Object.values(this.state).filter(function(v){return v;}).length!==2;return React.createElement(\"div\",{className:classes.root},React.createElement(FormControl,{component:\"fieldset\",className:classes.formControl},React.createElement(FormLabel,{component:\"legend\"},\"Assign responsibility\"),React.createElement(FormGroup,null,React.createElement(FormControlLabel,{control:React.createElement(Checkbox,{checked:gilad,onChange:this.handleChange('gilad'),value:\"gilad\"}),label:\"Gilad Gray\"}),React.createElement(FormControlLabel,{control:React.createElement(Checkbox,{checked:jason,onChange:this.handleChange('jason'),value:\"jason\"}),label:\"Jason Killian\"}),React.createElement(FormControlLabel,{control:React.createElement(Checkbox,{checked:antoine,onChange:this.handleChange('antoine'),value:\"antoine\"}),label:\"Antoine Llorca\"})),React.createElement(FormHelperText,null,\"Be careful\")),React.createElement(FormControl,{required:true,error:error,component:\"fieldset\",className:classes.formControl},React.createElement(FormLabel,{component:\"legend\"},\"Pick two\"),React.createElement(FormGroup,null,React.createElement(FormControlLabel,{control:React.createElement(Checkbox,{checked:gilad,onChange:this.handleChange('gilad'),value:\"gilad\"}),label:\"Gilad Gray\"}),React.createElement(FormControlLabel,{control:React.createElement(Checkbox,{checked:jason,onChange:this.handleChange('jason'),value:\"jason\"}),label:\"Jason Killian\"}),React.createElement(FormControlLabel,{control:React.createElement(Checkbox,{checked:antoine,onChange:this.handleChange('antoine'),value:\"antoine\"}),label:\"Antoine Llorca\"})),React.createElement(FormHelperText,null,\"You can display an error\")));}}]);return CheckboxesGroup;}(React.Component);export default withStyles(styles)(CheckboxesGroup);","map":{"version":3,"sources":["V:/Web/WebFashion/admin/src/utils/demos/selection-controls/CheckboxesGroup.js"],"names":["React","withStyles","FormLabel","FormControl","FormGroup","FormControlLabel","FormHelperText","Checkbox","styles","theme","root","display","formControl","margin","spacing","CheckboxesGroup","state","gilad","jason","antoine","handleChange","name","event","setState","target","checked","classes","props","error","Object","values","filter","v","length","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  formControl: {\n    margin: theme.spacing(1) * 3,\n  },\n});\n\nclass CheckboxesGroup extends React.Component {\n  state = {\n    gilad: true,\n    jason: false,\n    antoine: false,\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { gilad, jason, antoine } = this.state;\n    const error = Object.values(this.state).filter(v => v).length !== 2;\n\n    return (\n      <div className={classes.root}>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox checked={gilad} onChange={this.handleChange('gilad')} value=\"gilad\" />\n              }\n              label=\"Gilad Gray\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox checked={jason} onChange={this.handleChange('jason')} value=\"jason\" />\n              }\n              label=\"Jason Killian\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={antoine}\n                  onChange={this.handleChange('antoine')}\n                  value=\"antoine\"\n                />\n              }\n              label=\"Antoine Llorca\"\n            />\n          </FormGroup>\n          <FormHelperText>Be careful</FormHelperText>\n        </FormControl>\n        <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\n          <FormLabel component=\"legend\">Pick two</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox checked={gilad} onChange={this.handleChange('gilad')} value=\"gilad\" />\n              }\n              label=\"Gilad Gray\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox checked={jason} onChange={this.handleChange('jason')} value=\"jason\" />\n              }\n              label=\"Jason Killian\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={antoine}\n                  onChange={this.handleChange('antoine')}\n                  value=\"antoine\"\n                />\n              }\n              label=\"Antoine Llorca\"\n            />\n          </FormGroup>\n          <FormHelperText>You can display an error</FormHelperText>\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nCheckboxesGroup.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CheckboxesGroup);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _objectWithoutProperties from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React from'react';import Autosuggest from'react-autosuggest';import match from'autosuggest-highlight/match';import parse from'autosuggest-highlight/parse';import TextField from'@material-ui/core/TextField';import Paper from'@material-ui/core/Paper';import MenuItem from'@material-ui/core/MenuItem';import Popper from'@material-ui/core/Popper';import{withStyles}from'@material-ui/core/styles';var suggestions=[{label:'Afghanistan'},{label:'Aland Islands'},{label:'Albania'},{label:'Algeria'},{label:'American Samoa'},{label:'Andorra'},{label:'Angola'},{label:'Anguilla'},{label:'Antarctica'},{label:'Antigua and Barbuda'},{label:'Argentina'},{label:'Armenia'},{label:'Aruba'},{label:'Australia'},{label:'Austria'},{label:'Azerbaijan'},{label:'Bahamas'},{label:'Bahrain'},{label:'Bangladesh'},{label:'Barbados'},{label:'Belarus'},{label:'Belgium'},{label:'Belize'},{label:'Benin'},{label:'Bermuda'},{label:'Bhutan'},{label:'Bolivia, Plurinational State of'},{label:'Bonaire, Sint Eustatius and Saba'},{label:'Bosnia and Herzegovina'},{label:'Botswana'},{label:'Bouvet Island'},{label:'Brazil'},{label:'British Indian Ocean Territory'},{label:'Brunei Darussalam'}];function renderInputComponent(inputProps){var classes=inputProps.classes,_inputProps$inputRef=inputProps.inputRef,_inputRef=_inputProps$inputRef===void 0?function(){}:_inputProps$inputRef,ref=inputProps.ref,other=_objectWithoutProperties(inputProps,[\"classes\",\"inputRef\",\"ref\"]);return React.createElement(TextField,Object.assign({fullWidth:true,InputProps:{inputRef:function inputRef(node){ref(node);_inputRef(node);},classes:{input:classes.input}}},other));}function renderSuggestion(suggestion,_ref){var query=_ref.query,isHighlighted=_ref.isHighlighted;var matches=match(suggestion.label,query);var parts=parse(suggestion.label,matches);return React.createElement(MenuItem,{selected:isHighlighted,component:\"div\"},React.createElement(\"div\",null,parts.map(function(part,index){return part.highlight?React.createElement(\"span\",{key:String(index),style:{fontWeight:500}},part.text):React.createElement(\"strong\",{key:String(index),style:{fontWeight:300}},part.text);})));}function getSuggestions(value){var inputValue=value.trim().toLowerCase();var inputLength=inputValue.length;var count=0;return inputLength===0?[]:suggestions.filter(function(suggestion){var keep=count<5&&suggestion.label.toLowerCase().slice(0,inputLength)===inputValue;if(keep){count+=1;}return keep;});}function getSuggestionValue(suggestion){return suggestion.label;}var styles=function styles(theme){return{root:{height:250,flexGrow:1},container:{position:'relative'},suggestionsContainerOpen:{position:'absolute',zIndex:1,marginTop:theme.spacing(1),left:0,right:0},suggestion:{display:'block'},suggestionsList:{margin:0,padding:0,listStyleType:'none'},divider:{height:theme.spacing(1)*2}};};var IntegrationAutosuggest=/*#__PURE__*/function(_React$Component){_inherits(IntegrationAutosuggest,_React$Component);function IntegrationAutosuggest(){var _getPrototypeOf2;var _this;_classCallCheck(this,IntegrationAutosuggest);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(IntegrationAutosuggest)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.popperNode=null;_this.state={single:'',popper:'',suggestions:[]};_this.handleSuggestionsFetchRequested=function(_ref2){var value=_ref2.value;_this.setState({suggestions:getSuggestions(value)});};_this.handleSuggestionsClearRequested=function(){_this.setState({suggestions:[]});};_this.handleChange=function(name){return function(event,_ref3){var newValue=_ref3.newValue;_this.setState(_defineProperty({},name,newValue));};};return _this;}_createClass(IntegrationAutosuggest,[{key:\"render\",value:function render(){var _this2=this;var classes=this.props.classes;var autosuggestProps={renderInputComponent:renderInputComponent,suggestions:this.state.suggestions,onSuggestionsFetchRequested:this.handleSuggestionsFetchRequested,onSuggestionsClearRequested:this.handleSuggestionsClearRequested,getSuggestionValue:getSuggestionValue,renderSuggestion:renderSuggestion};return React.createElement(\"div\",{className:classes.root},React.createElement(Autosuggest,Object.assign({},autosuggestProps,{inputProps:{classes:classes,placeholder:'Search a country (start with a)',value:this.state.single,onChange:this.handleChange('single')},theme:{container:classes.container,suggestionsContainerOpen:classes.suggestionsContainerOpen,suggestionsList:classes.suggestionsList,suggestion:classes.suggestion},renderSuggestionsContainer:function renderSuggestionsContainer(options){return React.createElement(Paper,Object.assign({},options.containerProps,{square:true}),options.children);}})),React.createElement(\"div\",{className:classes.divider}),React.createElement(Autosuggest,Object.assign({},autosuggestProps,{inputProps:{classes:classes,label:'Label',placeholder:'With Popper',value:this.state.popper,onChange:this.handleChange('popper'),inputRef:function inputRef(node){_this2.popperNode=node;},InputLabelProps:{shrink:true}},theme:{suggestionsList:classes.suggestionsList,suggestion:classes.suggestion},renderSuggestionsContainer:function renderSuggestionsContainer(options){return React.createElement(Popper,{anchorEl:_this2.popperNode,open:Boolean(options.children)},React.createElement(Paper,Object.assign({square:true},options.containerProps,{style:{width:_this2.popperNode?_this2.popperNode.clientWidth:null}}),options.children));}})));}}]);return IntegrationAutosuggest;}(React.Component);export default withStyles(styles)(IntegrationAutosuggest);","map":{"version":3,"sources":["V:/Web/WebFashion/admin/src/utils/demos/autocomplete/IntegrationAutosuggest.js"],"names":["React","Autosuggest","match","parse","TextField","Paper","MenuItem","Popper","withStyles","suggestions","label","renderInputComponent","inputProps","classes","inputRef","ref","other","node","input","renderSuggestion","suggestion","query","isHighlighted","matches","parts","map","part","index","highlight","String","fontWeight","text","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","count","filter","keep","slice","getSuggestionValue","styles","theme","root","height","flexGrow","container","position","suggestionsContainerOpen","zIndex","marginTop","spacing","left","right","display","suggestionsList","margin","padding","listStyleType","divider","IntegrationAutosuggest","popperNode","state","single","popper","handleSuggestionsFetchRequested","setState","handleSuggestionsClearRequested","handleChange","name","event","newValue","props","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","placeholder","onChange","options","containerProps","children","InputLabelProps","shrink","Boolean","width","clientWidth","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popper from '@material-ui/core/Popper';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst suggestions = [\n  { label: 'Afghanistan' },\n  { label: 'Aland Islands' },\n  { label: 'Albania' },\n  { label: 'Algeria' },\n  { label: 'American Samoa' },\n  { label: 'Andorra' },\n  { label: 'Angola' },\n  { label: 'Anguilla' },\n  { label: 'Antarctica' },\n  { label: 'Antigua and Barbuda' },\n  { label: 'Argentina' },\n  { label: 'Armenia' },\n  { label: 'Aruba' },\n  { label: 'Australia' },\n  { label: 'Austria' },\n  { label: 'Azerbaijan' },\n  { label: 'Bahamas' },\n  { label: 'Bahrain' },\n  { label: 'Bangladesh' },\n  { label: 'Barbados' },\n  { label: 'Belarus' },\n  { label: 'Belgium' },\n  { label: 'Belize' },\n  { label: 'Benin' },\n  { label: 'Bermuda' },\n  { label: 'Bhutan' },\n  { label: 'Bolivia, Plurinational State of' },\n  { label: 'Bonaire, Sint Eustatius and Saba' },\n  { label: 'Bosnia and Herzegovina' },\n  { label: 'Botswana' },\n  { label: 'Bouvet Island' },\n  { label: 'Brazil' },\n  { label: 'British Indian Ocean Territory' },\n  { label: 'Brunei Darussalam' },\n];\n\nfunction renderInputComponent(inputProps) {\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputRef: node => {\n          ref(node);\n          inputRef(node);\n        },\n        classes: {\n          input: classes.input,\n        },\n      }}\n      {...other}\n    />\n  );\n}\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\">\n      <div>\n        {parts.map((part, index) => {\n          return part.highlight ? (\n            <span key={String(index)} style={{ fontWeight: 500 }}>\n              {part.text}\n            </span>\n          ) : (\n            <strong key={String(index)} style={{ fontWeight: 300 }}>\n              {part.text}\n            </strong>\n          );\n        })}\n      </div>\n    </MenuItem>\n  );\n}\n\nfunction getSuggestions(value) {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0\n    ? []\n    : suggestions.filter(suggestion => {\n        const keep =\n          count < 5 && suggestion.label.toLowerCase().slice(0, inputLength) === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nconst styles = theme => ({\n  root: {\n    height: 250,\n    flexGrow: 1,\n  },\n  container: {\n    position: 'relative',\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none',\n  },\n  divider: {\n    height: theme.spacing(1) * 2,\n  },\n});\n\nclass IntegrationAutosuggest extends React.Component {\n  popperNode = null;\n\n  state = {\n    single: '',\n    popper: '',\n    suggestions: [],\n  };\n\n  handleSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value),\n    });\n  };\n\n  handleSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    });\n  };\n\n  handleChange = name => (event, { newValue }) => {\n    this.setState({\n      [name]: newValue,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    const autosuggestProps = {\n      renderInputComponent,\n      suggestions: this.state.suggestions,\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\n      getSuggestionValue,\n      renderSuggestion,\n    };\n\n    return (\n      <div className={classes.root}>\n        <Autosuggest\n          {...autosuggestProps}\n          inputProps={{\n            classes,\n            placeholder: 'Search a country (start with a)',\n            value: this.state.single,\n            onChange: this.handleChange('single'),\n          }}\n          theme={{\n            container: classes.container,\n            suggestionsContainerOpen: classes.suggestionsContainerOpen,\n            suggestionsList: classes.suggestionsList,\n            suggestion: classes.suggestion,\n          }}\n          renderSuggestionsContainer={options => (\n            <Paper {...options.containerProps} square>\n              {options.children}\n            </Paper>\n          )}\n        />\n        <div className={classes.divider} />\n        <Autosuggest\n          {...autosuggestProps}\n          inputProps={{\n            classes,\n            label: 'Label',\n            placeholder: 'With Popper',\n            value: this.state.popper,\n            onChange: this.handleChange('popper'),\n            inputRef: node => {\n              this.popperNode = node;\n            },\n            InputLabelProps: {\n              shrink: true,\n            },\n          }}\n          theme={{\n            suggestionsList: classes.suggestionsList,\n            suggestion: classes.suggestion,\n          }}\n          renderSuggestionsContainer={options => (\n            <Popper anchorEl={this.popperNode} open={Boolean(options.children)}>\n              <Paper\n                square\n                {...options.containerProps}\n                style={{ width: this.popperNode ? this.popperNode.clientWidth : null }}\n              >\n                {options.children}\n              </Paper>\n            </Popper>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nIntegrationAutosuggest.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(IntegrationAutosuggest);\n"]},"metadata":{},"sourceType":"module"}
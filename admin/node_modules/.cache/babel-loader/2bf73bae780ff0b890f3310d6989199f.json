{"ast":null,"code":"import _classCallCheck from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import Button from'@material-ui/core/Button';import Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import DialogContentText from'@material-ui/core/DialogContentText';import DialogTitle from'@material-ui/core/DialogTitle';import Slide from'@material-ui/core/Slide';function Transition(props){return React.createElement(Slide,Object.assign({direction:\"up\"},props));}var AlertDialogSlide=/*#__PURE__*/function(_React$Component){_inherits(AlertDialogSlide,_React$Component);function AlertDialogSlide(){var _getPrototypeOf2;var _this;_classCallCheck(this,AlertDialogSlide);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(AlertDialogSlide)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={open:false};_this.handleClickOpen=function(){_this.setState({open:true});};_this.handleClose=function(){_this.setState({open:false});};return _this;}_createClass(AlertDialogSlide,[{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(Button,{onClick:this.handleClickOpen},\"Slide in alert dialog\"),React.createElement(Dialog,{open:this.state.open,TransitionComponent:Transition,keepMounted:true,onClose:this.handleClose,\"aria-labelledby\":\"alert-dialog-slide-title\",\"aria-describedby\":\"alert-dialog-slide-description\"},React.createElement(DialogTitle,{id:\"alert-dialog-slide-title\"},\"Use Google's location service?\"),React.createElement(DialogContent,null,React.createElement(DialogContentText,{id:\"alert-dialog-slide-description\"},\"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")),React.createElement(DialogActions,null,React.createElement(Button,{onClick:this.handleClose,color:\"primary\"},\"Disagree\"),React.createElement(Button,{onClick:this.handleClose,color:\"primary\"},\"Agree\"))));}}]);return AlertDialogSlide;}(React.Component);export default AlertDialogSlide;","map":{"version":3,"sources":["V:/Web/WebFashion/admin/src/utils/demos/dialogs/AlertDialogSlide.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","Transition","props","AlertDialogSlide","state","open","handleClickOpen","setState","handleClose","Component"],"mappings":"8jBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qCAA9B,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACzB,MAAO,qBAAC,KAAD,gBAAO,SAAS,CAAC,IAAjB,EAA0BA,KAA1B,EAAP,CACD,C,GAEKC,CAAAA,gB,mbACJC,K,CAAQ,CACNC,IAAI,CAAE,KADA,C,OAIRC,e,CAAkB,UAAM,CACtB,MAAKC,QAAL,CAAc,CAAEF,IAAI,CAAE,IAAR,CAAd,EACD,C,OAEDG,W,CAAc,UAAM,CAClB,MAAKD,QAAL,CAAc,CAAEF,IAAI,CAAE,KAAR,CAAd,EACD,C,mFAEQ,CACP,MACE,gCACE,oBAAC,MAAD,EAAQ,OAAO,CAAE,KAAKC,eAAtB,0BADF,CAEE,oBAAC,MAAD,EACE,IAAI,CAAE,KAAKF,KAAL,CAAWC,IADnB,CAEE,mBAAmB,CAAEJ,UAFvB,CAGE,WAAW,KAHb,CAIE,OAAO,CAAE,KAAKO,WAJhB,CAKE,kBAAgB,0BALlB,CAME,mBAAiB,gCANnB,EAQE,oBAAC,WAAD,EAAa,EAAE,CAAC,0BAAhB,EACG,gCADH,CARF,CAWE,oBAAC,aAAD,MACE,oBAAC,iBAAD,EAAmB,EAAE,CAAC,gCAAtB,kIADF,CAXF,CAiBE,oBAAC,aAAD,MACE,oBAAC,MAAD,EAAQ,OAAO,CAAE,KAAKA,WAAtB,CAAmC,KAAK,CAAC,SAAzC,aADF,CAIE,oBAAC,MAAD,EAAQ,OAAO,CAAE,KAAKA,WAAtB,CAAmC,KAAK,CAAC,SAAzC,UAJF,CAjBF,CAFF,CADF,CA+BD,C,8BA7C4Bf,KAAK,CAACgB,S,EAgDrC,cAAeN,CAAAA,gBAAf","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass AlertDialogSlide extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Button onClick={this.handleClickOpen}>Slide in alert dialog</Button>\n        <Dialog\n          open={this.state.open}\n          TransitionComponent={Transition}\n          keepMounted\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-slide-title\"\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          <DialogTitle id=\"alert-dialog-slide-title\">\n            {\"Use Google's location service?\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-slide-description\">\n              Let Google help apps determine location. This means sending anonymous location data to\n              Google, even when no apps are running.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Disagree\n            </Button>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Agree\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default AlertDialogSlide;\n"]},"metadata":{},"sourceType":"module"}
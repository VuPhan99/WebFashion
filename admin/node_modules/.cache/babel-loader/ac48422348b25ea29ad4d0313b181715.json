{"ast":null,"code":"import{Bar,Bubble,Doughnut,HorizontalBar,Line,Pie,Polar,Radar}from'react-chartjs-2';import Card from'@material-ui/core/Card';import CardContent from'@material-ui/core/CardContent';import CardHeader from'@material-ui/core/CardHeader';import Grid from'@material-ui/core/Grid';import React from'react';import{Wrapper}from'../../components';import{mockChart}from'../../utils/mock';var Charts=function Charts(){return React.createElement(Wrapper,null,React.createElement(Grid,{container:true,spacing:1},mockChart.map(function(chart,index){return React.createElement(Grid,{item:true,xs:12,sm:6,md:6,lg:4,key:index},React.createElement(Card,null,React.createElement(CardHeader,{title:chart.title,subheader:chart.subtitle}),React.createElement(CardContent,null,chart.type==='bar'&&React.createElement(Bar,{data:chart.data,height:chart.height,options:chart.options}),chart.type==='horizontalbar'&&React.createElement(HorizontalBar,{data:chart.data,height:chart.height,options:chart.options}),chart.type==='line'&&React.createElement(Line,{data:chart.data,height:chart.height,options:chart.options}),chart.type==='bubble'&&React.createElement(Bubble,{data:chart.data,height:chart.height,options:chart.options}),chart.type==='doughnut'&&React.createElement(Doughnut,{data:chart.data,height:chart.height,options:chart.options}),chart.type==='pie'&&React.createElement(Pie,{data:chart.data,height:chart.height,options:chart.options}),chart.type==='polar'&&React.createElement(Polar,{data:chart.data,height:chart.height,options:chart.options}),chart.type==='radar'&&React.createElement(Radar,{data:chart.data,height:chart.height,options:chart.options}))));})));};export default Charts;","map":{"version":3,"sources":["V:/Web/WebFashion/admin/src/pages/Charts/Charts.js"],"names":["Bar","Bubble","Doughnut","HorizontalBar","Line","Pie","Polar","Radar","Card","CardContent","CardHeader","Grid","React","Wrapper","mockChart","Charts","map","chart","index","title","subtitle","type","data","height","options"],"mappings":"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","sourcesContent":["import {\n  Bar,\n  Bubble,\n  Doughnut,\n  HorizontalBar,\n  Line,\n  Pie,\n  Polar,\n  Radar\n} from 'react-chartjs-2';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Grid from '@material-ui/core/Grid';\nimport React from 'react';\nimport { Wrapper } from '../../components';\nimport { mockChart } from '../../utils/mock';\n\nconst Charts = () => (\n  <Wrapper>\n    <Grid container spacing={1}>\n      {mockChart.map((chart, index) => (\n        <Grid item xs={12} sm={6} md={6} lg={4} key={index}>\n          <Card>\n            <CardHeader title={chart.title} subheader={chart.subtitle} />\n            <CardContent>\n              {chart.type === 'bar' && (\n                <Bar\n                  data={chart.data}\n                  height={chart.height}\n                  options={chart.options}\n                />\n              )}\n              {chart.type === 'horizontalbar' && (\n                <HorizontalBar\n                  data={chart.data}\n                  height={chart.height}\n                  options={chart.options}\n                />\n              )}\n              {chart.type === 'line' && (\n                <Line\n                  data={chart.data}\n                  height={chart.height}\n                  options={chart.options}\n                />\n              )}\n              {chart.type === 'bubble' && (\n                <Bubble\n                  data={chart.data}\n                  height={chart.height}\n                  options={chart.options}\n                />\n              )}\n              {chart.type === 'doughnut' && (\n                <Doughnut\n                  data={chart.data}\n                  height={chart.height}\n                  options={chart.options}\n                />\n              )}\n              {chart.type === 'pie' && (\n                <Pie\n                  data={chart.data}\n                  height={chart.height}\n                  options={chart.options}\n                />\n              )}\n              {chart.type === 'polar' && (\n                <Polar\n                  data={chart.data}\n                  height={chart.height}\n                  options={chart.options}\n                />\n              )}\n              {chart.type === 'radar' && (\n                <Radar\n                  data={chart.data}\n                  height={chart.height}\n                  options={chart.options}\n                />\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  </Wrapper>\n);\n\nexport default Charts;\n"]},"metadata":{},"sourceType":"module"}
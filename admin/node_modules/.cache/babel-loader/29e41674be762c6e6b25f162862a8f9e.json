{"ast":null,"code":"import _defineProperty from\"V:\\\\Web\\\\WebFashion\\\\admin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import Button from'@material-ui/core/Button';import Card from'@material-ui/core/Card';import CardContent from'@material-ui/core/CardContent';import CardHeader from'@material-ui/core/CardHeader';import React from'react';import Typography from'@material-ui/core/Typography';import{makeStyles}from'@material-ui/core/styles';var useStyles=makeStyles(function(theme){var _before,_content;return{stream:{padding:theme.spacing(1),position:'relative','&::before':(_before={content:'\"\"',position:'absolute',top:'8px',bottom:0},_defineProperty(_before,theme.breakpoints.down('sm'),{left:'44px'}),_defineProperty(_before,theme.breakpoints.up('sm'),{left:'43px'}),_defineProperty(_before,\"width\",'1px'),_defineProperty(_before,\"backgroundColor\",theme.palette.divider),_before)},card:{backgroundColor:'transparent',boxShadow:'none'},content:(_content={},_defineProperty(_content,theme.breakpoints.down('sm'),{paddingLeft:'74px'}),_defineProperty(_content,theme.breakpoints.up('sm'),{paddingLeft:'80px'}),_content)};});var ActivityStream=function ActivityStream(_ref){var title=_ref.title,stream=_ref.stream;var classes=useStyles();return/*#__PURE__*/React.createElement(\"div\",{className:classes.stream},/*#__PURE__*/React.createElement(\"div\",{className:classes.card},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\"},title)),stream.map(function(item,index){return/*#__PURE__*/React.createElement(Card,{key:index,className:classes.card},/*#__PURE__*/React.createElement(CardHeader,{avatar:item.avatar,title:item.title,subheader:item.subtitle}),/*#__PURE__*/React.createElement(CardContent,{className:classes.content},/*#__PURE__*/React.createElement(Typography,{component:\"p\"},item.body)));}));};export default ActivityStream;","map":{"version":3,"sources":["V:/Web/WebFashion/admin/src/components/ActivityStream/ActivityStream.js"],"names":["Button","Card","CardContent","CardHeader","React","Typography","makeStyles","useStyles","theme","stream","padding","spacing","position","content","top","bottom","breakpoints","down","left","up","palette","divider","card","backgroundColor","boxShadow","paddingLeft","ActivityStream","title","classes","map","item","index","avatar","subtitle","body"],"mappings":"wJAAA,MAAOA,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CAEA,GAAMC,CAAAA,SAAS,CAAGD,UAAU,CAAC,SAAAE,KAAK,6BAAK,CACrCC,MAAM,CAAE,CACNC,OAAO,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAENC,QAAQ,CAAE,UAFJ,CAGN,sBACEC,OAAO,CAAE,IADX,CAEED,QAAQ,CAAE,UAFZ,CAGEE,GAAG,CAAE,KAHP,CAIEC,MAAM,CAAE,CAJV,0BAKGP,KAAK,CAACQ,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CALH,CAKkC,CAC9BC,IAAI,CAAE,MADwB,CALlC,0BAQGV,KAAK,CAACQ,WAAN,CAAkBG,EAAlB,CAAqB,IAArB,CARH,CAQgC,CAC5BD,IAAI,CAAE,MADsB,CARhC,kCAWS,KAXT,4CAYmBV,KAAK,CAACY,OAAN,CAAcC,OAZjC,UAHM,CAD6B,CAmBrCC,IAAI,CAAE,CACJC,eAAe,CAAE,aADb,CAEJC,SAAS,CAAE,MAFP,CAnB+B,CAuBrCX,OAAO,uCACJL,KAAK,CAACQ,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CADI,CAC2B,CAC9BQ,WAAW,CAAE,MADiB,CAD3B,2BAIJjB,KAAK,CAACQ,WAAN,CAAkBG,EAAlB,CAAqB,IAArB,CAJI,CAIyB,CAC5BM,WAAW,CAAE,MADe,CAJzB,WAvB8B,CAAL,EAAN,CAA5B,CAiCA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAuB,IAApBC,CAAAA,KAAoB,MAApBA,KAAoB,CAAblB,MAAa,MAAbA,MAAa,CAC5C,GAAMmB,CAAAA,OAAO,CAAGrB,SAAS,EAAzB,CACA,mBACE,2BAAK,SAAS,CAAEqB,OAAO,CAACnB,MAAxB,eACE,2BAAK,SAAS,CAAEmB,OAAO,CAACN,IAAxB,eACE,oBAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,KAAK,CAAC,SAAlC,EACGK,KADH,CADF,CADF,CAOGlB,MAAM,CAACoB,GAAP,CAAW,SAACC,IAAD,CAAOC,KAAP,qBACV,oBAAC,IAAD,EAAM,GAAG,CAAEA,KAAX,CAAkB,SAAS,CAAEH,OAAO,CAACN,IAArC,eACE,oBAAC,UAAD,EACE,MAAM,CAAEQ,IAAI,CAACE,MADf,CAEE,KAAK,CAAEF,IAAI,CAACH,KAFd,CAGE,SAAS,CAAEG,IAAI,CAACG,QAHlB,EADF,cAME,oBAAC,WAAD,EAAa,SAAS,CAAEL,OAAO,CAACf,OAAhC,eACE,oBAAC,UAAD,EAAY,SAAS,CAAC,GAAtB,EAA2BiB,IAAI,CAACI,IAAhC,CADF,CANF,CADU,EAAX,CAPH,CADF,CAsBD,CAxBD,CAsCA,cAAeR,CAAAA,cAAf","sourcesContent":["import Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  stream: {\n    padding: theme.spacing(1),\n    position: 'relative',\n    '&::before': {\n      content: '\"\"',\n      position: 'absolute',\n      top: '8px',\n      bottom: 0,\n      [theme.breakpoints.down('sm')]: {\n        left: '44px'\n      },\n      [theme.breakpoints.up('sm')]: {\n        left: '43px'\n      },\n      width: '1px',\n      backgroundColor: theme.palette.divider\n    }\n  },\n  card: {\n    backgroundColor: 'transparent',\n    boxShadow: 'none'\n  },\n  content: {\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: '74px'\n    },\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: '80px'\n    }\n  }\n}));\n\nconst ActivityStream = ({ title, stream }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.stream}>\n      <div className={classes.card}>\n        <Button variant=\"contained\" color=\"primary\">\n          {title}\n        </Button>\n      </div>\n\n      {stream.map((item, index) => (\n        <Card key={index} className={classes.card}>\n          <CardHeader\n            avatar={item.avatar}\n            title={item.title}\n            subheader={item.subtitle}\n          />\n          <CardContent className={classes.content}>\n            <Typography component=\"p\">{item.body}</Typography>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nActivityStream.propTypes = {\n  title: PropTypes.string.isRequired,\n  stream: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      subtitle: PropTypes.string,\n      avatar: PropTypes.element,\n      body: PropTypes.string\n    })\n  ).isRequired\n};\n\nexport default ActivityStream;\n"]},"metadata":{},"sourceType":"module"}
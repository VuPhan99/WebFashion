{"ast":null,"code":"import Card from'@material-ui/core/Card';import CardContent from'@material-ui/core/CardContent';import CardMedia from'@material-ui/core/CardMedia';import Grid from'@material-ui/core/Grid';import React from'react';import Typography from'@material-ui/core/Typography';import{makeStyles}from'@material-ui/core/styles';var useStyles=makeStyles(function(theme){return{media:{height:0},content:{paddingBottom:theme.spacing(1)*2},center:{textAlign:'center'}};});var ImageStatCard=function ImageStatCard(_ref){var title=_ref.title,image=_ref.image,imageHeight=_ref.imageHeight,stats=_ref.stats;var classes=useStyles();return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardMedia,{title:title,image:image,className:classes.media,style:{paddingTop:imageHeight}}),/*#__PURE__*/React.createElement(CardContent,{className:classes.content},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:0,alignItems:'center',direction:'row',justify:'space-between'},stats.map(function(stat,index){return/*#__PURE__*/React.createElement(Grid,{item:true,xs:true,className:classes.center,key:index},/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",gutterBottom:true},stat.value),/*#__PURE__*/React.createElement(Typography,{variant:\"caption\"},stat.title));}))));};export default ImageStatCard;","map":{"version":3,"sources":["V:/Web/WebFashion/admin/src/components/Cards/ImageStatCard.js"],"names":["Card","CardContent","CardMedia","Grid","React","Typography","makeStyles","useStyles","theme","media","height","content","paddingBottom","spacing","center","textAlign","ImageStatCard","title","image","imageHeight","stats","classes","paddingTop","map","stat","index","value"],"mappings":"AAAA,MAAOA,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CAEA,GAAMC,CAAAA,SAAS,CAAGD,UAAU,CAAC,SAAAE,KAAK,QAAK,CACrCC,KAAK,CAAE,CACLC,MAAM,CAAE,CADH,CAD8B,CAIrCC,OAAO,CAAE,CACPC,aAAa,CAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,EAAmB,CAD3B,CAJ4B,CAOrCC,MAAM,CAAE,CACNC,SAAS,CAAE,QADL,CAP6B,CAAL,EAAN,CAA5B,CAYA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAA0C,IAAvCC,CAAAA,KAAuC,MAAvCA,KAAuC,CAAhCC,KAAgC,MAAhCA,KAAgC,CAAzBC,WAAyB,MAAzBA,WAAyB,CAAZC,KAAY,MAAZA,KAAY,CAC9D,GAAMC,CAAAA,OAAO,CAAGd,SAAS,EAAzB,CACA,mBACE,oBAAC,IAAD,mBACE,oBAAC,SAAD,EACE,KAAK,CAAEU,KADT,CAEE,KAAK,CAAEC,KAFT,CAGE,SAAS,CAAEG,OAAO,CAACZ,KAHrB,CAIE,KAAK,CAAE,CAAEa,UAAU,CAAEH,WAAd,CAJT,EADF,cAOE,oBAAC,WAAD,EAAa,SAAS,CAAEE,OAAO,CAACV,OAAhC,eACE,oBAAC,IAAD,EACE,SAAS,KADX,CAEE,OAAO,CAAE,CAFX,CAGE,UAAU,CAAE,QAHd,CAIE,SAAS,CAAE,KAJb,CAKE,OAAO,CAAE,eALX,EAOGS,KAAK,CAACG,GAAN,CAAU,SAACC,IAAD,CAAOC,KAAP,qBACT,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,KAAb,CAAc,SAAS,CAAEJ,OAAO,CAACP,MAAjC,CAAyC,GAAG,CAAEW,KAA9C,eACE,oBAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,YAAY,KAArC,EACGD,IAAI,CAACE,KADR,CADF,cAIE,oBAAC,UAAD,EAAY,OAAO,CAAC,SAApB,EAA+BF,IAAI,CAACP,KAApC,CAJF,CADS,EAAV,CAPH,CADF,CAPF,CADF,CA4BD,CA9BD,CA4CA,cAAeD,CAAAA,aAAf","sourcesContent":["import Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  media: {\n    height: 0\n  },\n  content: {\n    paddingBottom: theme.spacing(1) * 2\n  },\n  center: {\n    textAlign: 'center'\n  }\n}));\n\nconst ImageStatCard = ({ title, image, imageHeight, stats }) => {\n  const classes = useStyles();\n  return (\n    <Card>\n      <CardMedia\n        title={title}\n        image={image}\n        className={classes.media}\n        style={{ paddingTop: imageHeight }}\n      />\n      <CardContent className={classes.content}>\n        <Grid\n          container\n          spacing={0}\n          alignItems={'center'}\n          direction={'row'}\n          justify={'space-between'}\n        >\n          {stats.map((stat, index) => (\n            <Grid item xs className={classes.center} key={index}>\n              <Typography variant=\"h6\" gutterBottom>\n                {stat.value}\n              </Typography>\n              <Typography variant=\"caption\">{stat.title}</Typography>\n            </Grid>\n          ))}\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nImageStatCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  imageHeight: PropTypes.number.isRequired,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      value: PropTypes.number\n    })\n  ).isRequired\n};\n\nexport default ImageStatCard;\n"]},"metadata":{},"sourceType":"module"}